name: Version and Release

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  version:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test || echo "No tests configured"

    - name: Build project
      run: npm run build

    - name: Generate version
      id: version
      run: |
        # Get current version from package.json
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        
        # Generate new version based on commit messages
        if git log --format=%B -n 1 ${{ github.sha }} | grep -q "#major"; then
          NEW_VERSION=$(npm version major --no-git-tag-version)
        elif git log --format=%B -n 1 ${{ github.sha }} | grep -q "#minor"; then
          NEW_VERSION=$(npm version minor --no-git-tag-version)
        else
          NEW_VERSION=$(npm version patch --no-git-tag-version)
        fi
        
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Update version file
      run: |
        echo "{
          \"version\": \"${{ steps.version.outputs.new_version }}\",
          \"buildDate\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",
          \"commit\": \"${{ github.sha }}\",
          \"branch\": \"${{ github.ref_name }}\"
        }" > version.json

    - name: Commit version update
      if: github.event_name == 'push'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add package.json version.json
        git commit -m "chore: bump version to ${{ steps.version.outputs.new_version }}" || exit 0
        git push

    - name: Create Release
      if: github.event_name == 'push'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.new_version }}
        release_name: Release ${{ steps.version.outputs.new_version }}
        body: |
          ## What's Changed
          - Automated release for version ${{ steps.version.outputs.new_version }}
          - Build date: $(date -u +%Y-%m-%dT%H:%M:%SZ)
          - Commit: ${{ github.sha }}
          
          ## Deployment
          This release includes:
          - Multi-bucket S3 support
          - Enhanced security features
          - Improved user interface
          - Bug fixes and performance improvements
        draft: false
        prerelease: false
